{"ast":null,"code":"var _jsxFileName = \"/Users/khanhdao/Desktop/JRSoftwareSolutions/Watermark/jrss-project/watermark-frontend/src/components/Upload.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport '../css/Upload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadButton() {\n  _s();\n  // drag state\n  const [dragActive, setDragActive] = React.useState(false);\n  // ref\n  const inputRef = React.useRef(null);\n  const [uploadedFiles, setUploadedFiles] = React.useState([]);\n\n  // handle drag events\n  const handleDrag = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n\n    // Append each file to the FormData object with the same field name\n    uploadedFiles.forEach((file, index) => {\n      formData.append(`file[${index}]`, file);\n    });\n    console.log(\"formData\", formData);\n    try {\n      let file = await axios.post('http://127.0.0.1:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(file);\n      alert('File uploaded successfully');\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n\n  // triggers when file is dropped\n  const handleDrop = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    console.log(\"Here\");\n    console.log(e.dataTransfer.files[0].name);\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      const newFiles = Array.from(e.dataTransfer.files);\n      setUploadedFiles(prevFiles => [...prevFiles, ...newFiles]);\n      handleUpload();\n    }\n  };\n\n  // triggers when file is selected with click\n  const handleChange = function (e) {\n    e.preventDefault();\n    if (e.target.files && e.target.files[0]) {\n      const newFiles = Array.from(e.target.files);\n      setUploadedFiles(prevFiles => [...prevFiles, ...newFiles]);\n    }\n  };\n\n  // triggers the input when the button is clicked\n  const onButtonClick = () => {\n    inputRef.current.click();\n  };\n  const handleDelete = index => {\n    setUploadedFiles(prevFiles => prevFiles.filter((file, i) => i !== index));\n  };\n  const handleConvert = () => {\n    // Add logic for conversion\n    console.log('Converting files:', uploadedFiles);\n    // Clear uploaded files after conversion\n\n    setUploadedFiles([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-layout\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form-file-upload\",\n      onDragEnter: handleDrag,\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"file\",\n        id: \"input-file-upload\",\n        multiple: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"label-file-upload\",\n        htmlFor: \"input-file-upload\",\n        className: dragActive ? \"drag-active\" : \"\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag and drop your file here or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-button\",\n            onClick: onButtonClick,\n            children: \"Upload a file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), dragActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"drag-file-element\",\n        onDragEnter: handleDrag,\n        onDragLeave: handleDrag,\n        onDragOver: handleDrag,\n        onDrop: handleDrop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadButton, \"5FZu4HQc2ISYXoe7XKa1uyoNIrA=\");\n_c = UploadButton;\nvar _c;\n$RefreshReg$(_c, \"UploadButton\");","map":{"version":3,"names":["React","Button","axios","jsxDEV","_jsxDEV","UploadButton","_s","dragActive","setDragActive","useState","inputRef","useRef","uploadedFiles","setUploadedFiles","handleDrag","e","preventDefault","stopPropagation","type","handleUpload","formData","FormData","forEach","file","index","append","console","log","post","headers","alert","error","handleDrop","dataTransfer","files","name","newFiles","Array","from","prevFiles","handleChange","target","onButtonClick","current","click","handleDelete","filter","i","handleConvert","className","children","id","onDragEnter","onSubmit","ref","multiple","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onClick","onDragLeave","onDragOver","onDrop","_c","$RefreshReg$"],"sources":["/Users/khanhdao/Desktop/JRSoftwareSolutions/Watermark/jrss-project/watermark-frontend/src/components/Upload.js"],"sourcesContent":["import React from 'react';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport '../css/Upload.css';\n\n\n\nexport default function UploadButton() {\n   // drag state\n  const [dragActive, setDragActive] = React.useState(false);\n  // ref\n  const inputRef = React.useRef(null);\n\n  const [uploadedFiles, setUploadedFiles] = React.useState([]);\n  \n  // handle drag events\n  const handleDrag = function(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  };\n\n  const handleUpload = async () => {\n    const formData = new FormData();\n\n    // Append each file to the FormData object with the same field name\n    uploadedFiles.forEach((file, index) => {\n      formData.append(`file[${index}]`, file);\n    });\n    console.log(\"formData\", formData);\n    try {\n        let file = await axios.post('http://127.0.0.1:5000/upload', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        });\n        \n        console.log(file);\n        alert('File uploaded successfully');\n    } catch (error) {\n        console.error('Error uploading file:', error);\n    }\n};\n  \n  // triggers when file is dropped\n  const handleDrop = function(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    console.log(\"Here\");\n    console.log(e.dataTransfer.files[0].name);\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n        const newFiles = Array.from(e.dataTransfer.files);\n        setUploadedFiles((prevFiles) => [...prevFiles, ...newFiles]);\n        handleUpload();\n    }\n  };\n  \n  // triggers when file is selected with click\n  const handleChange = function(e) {\n    e.preventDefault();\n    if (e.target.files && e.target.files[0]) {\n        const newFiles = Array.from(e.target.files);\n        setUploadedFiles((prevFiles) => [...prevFiles, ...newFiles]);\n    }\n  };\n  \n// triggers the input when the button is clicked\n  const onButtonClick = () => {\n    inputRef.current.click();\n  };\n\n  const handleDelete = (index) => {\n    setUploadedFiles((prevFiles) => prevFiles.filter((file, i) => i !== index));\n  };\n\n  const handleConvert = () => {\n    // Add logic for conversion\n    console.log('Converting files:', uploadedFiles);\n    // Clear uploaded files after conversion\n\n    setUploadedFiles([]);\n  };\n  \n  return (\n    <div className='page-layout'>\n        <form id=\"form-file-upload\" onDragEnter={handleDrag} onSubmit={(e) => e.preventDefault()}>\n            <input ref={inputRef} type=\"file\" id=\"input-file-upload\" multiple={true} onChange={handleChange} />\n            <label id=\"label-file-upload\" htmlFor=\"input-file-upload\" className={dragActive ? \"drag-active\" : \"\" }>\n                <div>\n                <p>Drag and drop your file here or</p>\n                <button className=\"upload-button\" onClick={onButtonClick}>Upload a file</button>\n                </div> \n            </label>\n            { dragActive && <div id=\"drag-file-element\" onDragEnter={handleDrag} onDragLeave={handleDrag} onDragOver={handleDrag} onDrop={handleDrop}></div> }\n        </form>\n       {/* there is some error with the coe below */}\n        {/* <div>\n          <h2>Uploaded Files</h2>\n          <table>\n            <thead>\n              <tr>\n                <th>File Name</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {uploadedFiles.map((file, index) => (\n                <tr key={index}>\n                  <td>{file.name}</td>\n                  <td>\n                    <Button onClick={() => handleDelete(index)}>Delete</Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <Button onClick={handleConvert}>Convert</Button>\n        </div> */}\n    </div>\n  );\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}