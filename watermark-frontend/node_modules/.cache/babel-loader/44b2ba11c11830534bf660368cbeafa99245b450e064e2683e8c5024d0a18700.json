{"ast":null,"code":"var _jsxFileName = \"/Users/khanhdao/Desktop/JRSoftwareSolutions/Watermark/jrss-project/watermark-frontend/src/components/Upload.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport '../css/Upload.css';\nimport { TableCell, TableRow } from '@mui/material';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport Paper from '@mui/material/Paper';\nimport JSZip from 'jszip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadButton() {\n  _s();\n  // drag state\n  const [dragActive, setDragActive] = React.useState(false);\n  // ref\n  const inputRef = React.useRef(null);\n  const [uploadedFiles, setUploadedFiles] = React.useState([]);\n  const [blobUrl, setBlobUrl] = React.useState('');\n\n  // handle drag events\n  const handleDrag = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  };\n  const handleExtractPDFs = async blobData => {\n    console.log(\"Called hanldedExtractPDFs function\");\n    console.log('blobUrl', blobUrl);\n    try {\n      // Assuming blobUrl is the URL to the ZIP file\n      // const response = await fetch(blobUrl);\n      // console.log('response', response);\n      const blob = blobData;\n      console.log('blob', blob);\n\n      // Load zip content into JSZip\n      const zip = new JSZip();\n      const zipContent = await zip.loadAsync(blob);\n      console.log('zipContent', zipContent);\n      // Filter and process only PDF files\n      const pdfBlobUrls = [];\n      for (const [relativePath, zipEntry] of Object.entries(zipContent.files)) {\n        if (relativePath.endsWith('.pdf')) {\n          const fileBlob = await zipEntry.async(\"blob\");\n          const fileName = zipEntry.name;\n          console.log('fileBlob', fileBlob);\n          console.log('fileName', fileName);\n          // Parse the index from the file name\n          const splitName = fileName.split('Ä¬'); // Adjust based on actual character encoding\n          const index = splitName.length > 1 ? parseInt(splitName[0], 10) : null;\n          console.log('index', index);\n          if (index !== null && index < uploadedFiles.length) {\n            console.log('inside if');\n            const newFile = new File([fileBlob], fileName, {\n              type: 'application/pdf'\n            });\n            const blobUrl = URL.createObjectURL(newFile);\n            pdfBlobUrls.push({\n              blobUrl,\n              index\n            });\n            // Update the corresponding item in uploadedFiles\n            // const updatedFiles = [...uploadedFiles];\n            // updatedFiles[index] = {\n            //     ...updatedFiles[index],\n            //     viewLink: blobUrl, // Add the Blob URL for viewing\n            //     status: \"Modified\" // Update the status\n            // };\n            // setUploadedFiles(updatedFiles);\n          }\n        }\n      }\n\n      const updatedFiles = [...uploadedFiles];\n      pdfBlobUrls.forEach((obj, index) => {\n        console.log(\"modified index\", index);\n        updatedFiles[obj.index] = {\n          ...updatedFiles[value.indx],\n          status: \"Completed\",\n          viewLink: blobUrl // Add the Blob URL for viewing\n        };\n\n        console.log(\"updatedFiles\", updatedFiles);\n      });\n      setUploadedFiles(updatedFiles);\n\n      // // This setTimeout is just to ensure that all async operations inside forEach have completed\n      // setTimeout(() => {\n      //   setUploadedFiles(prevFiles => [...prevFiles, ...newUploadedFiles]);\n      // }, 1000); // You might need to adjust this delay based on the number/size of files\n    } catch (error) {\n      console.error('Error extracting PDF files:', error);\n    }\n  };\n  const handleModify = async () => {\n    const formData = new FormData();\n    console.log('uploadedFiles', uploadedFiles);\n\n    // Append each file to the FormData object with the same field name\n    uploadedFiles.forEach((file, index) => {\n      formData.append(`${index}`, file.file); // failed here because it is unable to retrieve file\n    });\n\n    // set all the status modifiecation to completed\n    const updateTableStatus = uploadedFiles.map((file, i) => {\n      return {\n        ...file,\n        status: \"Completed\"\n      };\n    });\n    setUploadedFiles(updateTableStatus);\n    try {\n      let response = await axios.post('http://127.0.0.1:8000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        responseType: 'blob'\n      }).then(response => {\n        // Create a Blob from the response data\n        const blob = new Blob([response.data], {\n          type: 'application/zip'\n        });\n\n        // Create a URL for the Blob\n        const url = window.URL.createObjectURL(blob);\n        if (blobUrl.length > 0) {\n          window.URL.revokeObjectURL(blobUrl);\n        }\n        setBlobUrl(url);\n        handleExtractPDFs(response.data);\n      }).catch(error => {\n        console.error('Error downloading .docx file:', error);\n      });\n      alert('File uploaded successfully');\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  const getStatusStyle = status => {\n    switch (status) {\n      case \"Not uploaded\":\n        return {\n          color: 'black'\n        };\n      case \"Completed\":\n        return {\n          color: 'green',\n          backgroundColor: 'lightgreen'\n        };\n      default:\n        return {\n          color: 'black'\n        };\n    }\n  };\n\n  // triggers when file is dropped\n  const handleDrop = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      const newFiles = Array.from(e.dataTransfer.files);\n      const formattedFiles = newFiles.map(newFile => ({\n        file: newFile,\n        status: \"Not uploaded\",\n        viewLink: \"Not available\"\n      }));\n      setUploadedFiles(prevFiles => [...prevFiles, ...formattedFiles]);\n    }\n  };\n\n  // triggers when file is selected with click\n  const handleChange = function (e) {\n    e.preventDefault();\n    if (e.target.files && e.target.files[0]) {\n      const newFiles = Array.from(e.target.files);\n      const formattedFiles = newFiles.map(newFile => ({\n        file: newFile,\n        status: \"Not uploaded\",\n        viewLink: \"Not available\"\n      }));\n      setUploadedFiles(prevFiles => [...prevFiles, ...formattedFiles]);\n    }\n  };\n\n  // triggers the input when the button is clicked\n  const onButtonClick = () => {\n    inputRef.current.click();\n  };\n  const handleDelete = index => {\n    setUploadedFiles(prevFiles => prevFiles.filter((file, i) => i !== index));\n  };\n  const handleConvert = () => {\n    console.log('Converting files:', JSON.stringify(uploadedFiles));\n    console.log('Converting files:', uploadedFiles);\n    handleModify();\n  };\n  const handleDownload = () => {\n    // Create a link and click it to trigger the download\n    const a = document.createElement('a');\n    a.href = blobUrl;\n    a.download = 'modified_resumes.zip';\n    a.click();\n  };\n  const handleClear = () => {\n    setUploadedFiles([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form-file-upload\",\n      onDragEnter: handleDrag,\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"file\",\n        id: \"input-file-upload\",\n        multiple: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"label-file-upload\",\n        htmlFor: \"input-file-upload\",\n        className: dragActive ? \"drag-active\" : \"\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag and drop your file here or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-button\",\n            onClick: onButtonClick,\n            children: \"Upload a file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }, this), dragActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"drag-file-element\",\n        onDragEnter: handleDrag,\n        onDragLeave: handleDrag,\n        onDragOver: handleDrag,\n        onDrop: handleDrop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Uploaded Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"File Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: URL.createObjectURL(file.file),\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: file.file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: getStatusStyle(file.status),\n              children: file.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: file.viewLink,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: \"View File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleDelete(index),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleConvert,\n        style: {\n          marginTop: '50px'\n        },\n        children: \"Modify Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleClear,\n        style: {\n          'marginTop': '50px',\n          marginLeft: '20px'\n        },\n        children: \"Clear List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleDownload,\n        style: {\n          'marginTop': '50px',\n          marginLeft: '20px'\n        },\n        children: \"Download Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadButton, \"52QA/N5bkBurvfvqfagaVO1Mj7Y=\");\n_c = UploadButton;\nvar _c;\n$RefreshReg$(_c, \"UploadButton\");","map":{"version":3,"names":["React","Button","axios","TableCell","TableRow","Table","TableBody","TableContainer","TableHead","Paper","JSZip","jsxDEV","_jsxDEV","UploadButton","_s","dragActive","setDragActive","useState","inputRef","useRef","uploadedFiles","setUploadedFiles","blobUrl","setBlobUrl","handleDrag","e","preventDefault","stopPropagation","type","handleExtractPDFs","blobData","console","log","blob","zip","zipContent","loadAsync","pdfBlobUrls","relativePath","zipEntry","Object","entries","files","endsWith","fileBlob","async","fileName","name","splitName","split","index","length","parseInt","newFile","File","URL","createObjectURL","push","updatedFiles","forEach","obj","value","indx","status","viewLink","error","handleModify","formData","FormData","file","append","updateTableStatus","map","i","response","post","headers","responseType","then","Blob","data","url","window","revokeObjectURL","catch","alert","getStatusStyle","color","backgroundColor","handleDrop","dataTransfer","newFiles","Array","from","formattedFiles","prevFiles","handleChange","target","onButtonClick","current","click","handleDelete","filter","handleConvert","JSON","stringify","handleDownload","a","document","createElement","href","download","handleClear","className","children","id","onDragEnter","onSubmit","ref","multiple","onChange","_jsxFileName","lineNumber","columnNumber","htmlFor","onClick","onDragLeave","onDragOver","onDrop","component","sx","minWidth","rel","style","variant","marginTop","marginLeft","_c","$RefreshReg$"],"sources":["/Users/khanhdao/Desktop/JRSoftwareSolutions/Watermark/jrss-project/watermark-frontend/src/components/Upload.js"],"sourcesContent":["import React from 'react';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport '../css/Upload.css';\nimport { TableCell, TableRow } from '@mui/material';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport Paper from '@mui/material/Paper';\nimport JSZip from 'jszip';\n\n\n\n\n\nexport default function UploadButton() {\n   // drag state\n  const [dragActive, setDragActive] = React.useState(false);\n  // ref\n  const inputRef = React.useRef(null);\n\n  const [uploadedFiles, setUploadedFiles] = React.useState([]);\n  const [blobUrl, setBlobUrl] = React.useState('');\n  \n  // handle drag events\n  const handleDrag = function(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  };\n\n  \n\n  const handleExtractPDFs = async (blobData) => {\n    console.log(\"Called hanldedExtractPDFs function\");\n    console.log('blobUrl', blobUrl);\n    try {\n      // Assuming blobUrl is the URL to the ZIP file\n      // const response = await fetch(blobUrl);\n      // console.log('response', response);\n      const blob = blobData;\n      console.log('blob', blob);\n\n      // Load zip content into JSZip\n      const zip = new JSZip();\n      const zipContent = await zip.loadAsync(blob);\n      console.log('zipContent', zipContent);\n      // Filter and process only PDF files\n      const pdfBlobUrls = [];\n      for (const [relativePath, zipEntry] of Object.entries(zipContent.files)) {\n        if (relativePath.endsWith('.pdf')) {\n          const fileBlob = await zipEntry.async(\"blob\");\n          const fileName = zipEntry.name;\n          \n          console.log('fileBlob', fileBlob);\n          console.log('fileName', fileName);\n          // Parse the index from the file name\n          const splitName = fileName.split('Ä¬'); // Adjust based on actual character encoding\n          const index = splitName.length > 1 ? parseInt(splitName[0], 10) : null;\n          console.log('index', index);\n\n          if (index !== null && index < uploadedFiles.length) {\n            console.log('inside if');\n            const newFile = new File([fileBlob], fileName, { type: 'application/pdf' });\n            const blobUrl = URL.createObjectURL(newFile);\n\n            pdfBlobUrls.push({ blobUrl, index});\n            // Update the corresponding item in uploadedFiles\n            // const updatedFiles = [...uploadedFiles];\n            // updatedFiles[index] = {\n            //     ...updatedFiles[index],\n            //     viewLink: blobUrl, // Add the Blob URL for viewing\n            //     status: \"Modified\" // Update the status\n            // };\n            // setUploadedFiles(updatedFiles);\n          }\n        }\n      }\n\n      const updatedFiles = [...uploadedFiles];\n\n      pdfBlobUrls.forEach((obj, index) => {\n        console.log(\"modified index\", index);\n        updatedFiles[obj.index] = {\n          ...updatedFiles[value.indx],\n          status: \"Completed\",\n          viewLink: blobUrl, // Add the Blob URL for viewing\n        };\n        console.log(\"updatedFiles\", updatedFiles);\n      });\n      setUploadedFiles(updatedFiles);\n\n      // // This setTimeout is just to ensure that all async operations inside forEach have completed\n      // setTimeout(() => {\n      //   setUploadedFiles(prevFiles => [...prevFiles, ...newUploadedFiles]);\n      // }, 1000); // You might need to adjust this delay based on the number/size of files\n\n    } catch (error) {\n      console.error('Error extracting PDF files:', error);\n    }\n  };\n\n  const handleModify = async () => {\n    const formData = new FormData();\n    console.log('uploadedFiles', uploadedFiles);\n\n    // Append each file to the FormData object with the same field name\n    uploadedFiles.forEach((file, index) => {\n      formData.append(`${index}`, file.file); // failed here because it is unable to retrieve file\n    });\n\n    // set all the status modifiecation to completed\n    const updateTableStatus = uploadedFiles.map((file, i) => {\n      return { ...file, status: \"Completed\"};\n    });\n    setUploadedFiles(updateTableStatus);\n\n\n    try {\n        let response = await axios.post('http://127.0.0.1:8000/upload', formData, {\n            headers: {\n              \n                'Content-Type': 'multipart/form-data',\n            },\n            responseType: 'blob', \n        }).then(response => {\n          // Create a Blob from the response data\n          const blob = new Blob([response.data], { type: 'application/zip' });\n\n          // Create a URL for the Blob\n          const url = window.URL.createObjectURL(blob);\n          if(blobUrl.length > 0) {\n            window.URL.revokeObjectURL(blobUrl);\n          }\n          setBlobUrl(url);\n          handleExtractPDFs(response.data);\n        })\n        .catch(error => {\n          console.error('Error downloading .docx file:', error);\n        });\n\n        alert('File uploaded successfully');\n    } catch (error) {\n        console.error('Error uploading file:', error);\n    }\n};\n  const getStatusStyle = (status) => {\n    switch(status) {\n      case \"Not uploaded\":\n        return {color: 'black'};\n      case \"Completed\":\n        return {color: 'green', backgroundColor: 'lightgreen'};\n      default: \n        return {color: 'black'};\n\n    }\n  }\n  \n  // triggers when file is dropped\n  const handleDrop = function(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n   \n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n        const newFiles = Array.from(e.dataTransfer.files);\n        const formattedFiles = newFiles.map((newFile) => ({\n          file: newFile,\n          status: \"Not uploaded\", \n          viewLink: \"Not available\"\n        }));\n        \n        setUploadedFiles((prevFiles) => [...prevFiles, ...formattedFiles]);\n    }\n  };\n  \n  // triggers when file is selected with click\n  const handleChange = function(e) {\n    e.preventDefault();\n    if (e.target.files && e.target.files[0]) {\n        const newFiles = Array.from(e.target.files);\n        const formattedFiles = newFiles.map((newFile) => ({\n          file: newFile,\n          status: \"Not uploaded\",\n          viewLink: \"Not available\"\n        }));\n        \n        setUploadedFiles((prevFiles) => [...prevFiles, ...formattedFiles]);\n    }\n  };\n\n  \n// triggers the input when the button is clicked\n  const onButtonClick = () => {\n    inputRef.current.click();\n  };\n\n  const handleDelete = (index) => {\n    setUploadedFiles((prevFiles) => prevFiles.filter((file, i) => i !== index));\n  };\n\n  const handleConvert = () => {\n    console.log('Converting files:', JSON.stringify(uploadedFiles));\n    console.log('Converting files:', uploadedFiles);\n    handleModify();\n  };\n\n  const handleDownload = () => {\n    // Create a link and click it to trigger the download\n    const a = document.createElement('a');\n    a.href = blobUrl;\n    a.download = 'modified_resumes.zip';\n    a.click();\n  };\n\n  const handleClear = () => {\n    setUploadedFiles([]);\n  };\n  \n  return (\n    <div className='page-layout'>\n        <form id=\"form-file-upload\" onDragEnter={handleDrag} onSubmit={(e) => e.preventDefault()}>\n            <input ref={inputRef} type=\"file\" id=\"input-file-upload\" multiple={true} onChange={handleChange} />\n            <label id=\"label-file-upload\" htmlFor=\"input-file-upload\" className={dragActive ? \"drag-active\" : \"\" }>\n                <div>\n                <p>Drag and drop your file here or</p>\n                <button className=\"upload-button\" onClick={onButtonClick}>Upload a file</button>\n                </div> \n            </label>\n            { dragActive && <div id=\"drag-file-element\" onDragEnter={handleDrag} onDragLeave={handleDrag} onDragOver={handleDrag} onDrop={handleDrop}></div> }\n        </form>\n      \n        <h2>Uploaded Files</h2>\n        <TableContainer component={Paper}>\n          <Table sx={{minWidth: 650}} aria-label=\"simple table\">\n            <TableHead>\n                <TableRow>\n                  <TableCell>File Name</TableCell>\n                  <TableCell>Status</TableCell>\n                  <TableCell>View</TableCell>\n                  <TableCell>Delete</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n              {uploadedFiles.map((file, index) => (\n                <TableRow key={index}>\n                  <TableCell>\n                    <a href={URL.createObjectURL(file.file)} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {file.file.name}\n                    </a>\n                  </TableCell>\n                  <TableCell style={getStatusStyle(file.status)}>{file.status}</TableCell>\n                  <TableCell>\n                    <a href={file.viewLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                      View File\n                    </a>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(index)}>Delete</Button>\n                  </TableCell>\n                  </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <div>\n          <Button variant=\"outlined\" onClick={handleConvert} style={{marginTop: '50px'}}>Modify Files</Button>\n          <Button variant=\"outlined\" onClick={handleClear} style={{'marginTop': '50px', marginLeft: '20px'}}>Clear List</Button>\n          <Button variant=\"outlined\" onClick={handleDownload} style={{'marginTop': '50px', marginLeft: '20px'}}>Download Files</Button>\n        </div>\n    </div>\n  );\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}